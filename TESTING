If you wish to run the unit tests for MDiG while developing code, then install
nosetests for python which is a testing framework, and optionally "coverage"
which is to measure the code coverage of tests:

 easy_install nose coverage paste

Then if you go to the mdig program directory (mdig/ from the root of the source)
and run:

 nosetests -v

Or to run with code coverage analysis:

 nosetests -v --with-coverage

You'll run a bunch of tests to check everything's working correctly.

Note - currently only basic tests are run, more rigarous tests are
needed (although this has been greatly improved over the last year):
* More model files that more thoroughly test the potential model types.
* More coverage in unit tests for components within MDiG.
* Comparison of the output maps from various models versus what the expected map
  should look like. For modules, create before and after maps and make sure they
  have no difference,implement as a shell script to be run within GRASS.

